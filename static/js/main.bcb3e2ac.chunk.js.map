{"version":3,"sources":["components/LoadableImage/LoadableImage.module.css","layout/Header.tsx","layout/Foter.tsx","components/Preloader.tsx","media/image-placeholder.svg","store/hooks.ts","components/LoadableImage/LoadableImage.tsx","components/MovieItem.tsx","components/MovieList.tsx","store/types.ts","store/actionCreatores.ts","components/RadioBtnList.tsx","components/Pagination.tsx","components/Alert.tsx","components/Search.tsx","pages/Home.tsx","pages/SingleMovie.tsx","App.tsx","store/moviesReducer.ts","store/appReducer.ts","store/searchReducer.ts","store/rootReducer.ts","index.tsx"],"names":["module","exports","Header","className","href","id","Footer","Date","getFullYear","Preloader","useAppDispatch","useDispatch","useAppSelector","useSelector","LoadableImage","props","src","alt","onLoad","useState","isLoaded","setIsLoaded","imageRef","useRef","containerRef","isVisible","ref","rootMargin","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","current","observe","currentRef","unobserve","useOnScreen","onload","wrapperClass","styles","container","push","containerLoaded","imgClass","image","imageLoaded","join","MovieItem","title","Title","year","Year","imdbID","type","Type","poster","Poster","placeholder","to","MovieList","movies","state","moviesKEY","movieList","length","map","movie","FETCH_MOVIES","FETCH_SINGLE_MOVIE","GET_TOTAL_FOUND","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","DEFINE_SEARCH_VALUE","SET_SEARCHED_TYPE","SET_SEARCHED_PAGE_ADD","SET_SEARCHED_PAGE_REMOVE","SET_SEARCHED_PAGE_START","showLoader","hideLoader","showAlert","text","payload","hideAlert","defineSearchVal","setSearchedType","searchedType","setSearchedPageStart","RadioBtnList","dispatch","useHistory","useLocation","pathname","search","getRadioPureParams","pureSearchParam","pureTypeParam","split","handleChangeRadio","e","typeParam","target","dataset","name","checked","onChange","Pagination","totalFound","getPugPureParams","purePageParam","onClick","pureParams","Math","ceil","Alert","message","appKEY","alert","role","Search","inputRef","searchVal","searchKEY","getSearchPureParams","setHandledInput","event","key","currentTarget","value","onKeyPress","Home","loading","loadingStatus","trueSearch","substring","a","fetch","response","json","data","fetchedMovies","totalResults","ok","Error","fetchSearchedMovies","SingleMovie","useParams","singleMovie","goBack","fetchedSingleMovie","Country","Runtime","Genre","Language","Director","Actors","Plot","App","basename","exact","path","component","initialState","InitialState","initialSearchState","currentPage","rootReducer","combineReducers","action","Number","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcb3e2ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoadableImage_container__3Zq2d\",\"load\":\"LoadableImage_load__1PmC_\",\"containerLoaded\":\"LoadableImage_containerLoaded__3e6TR\",\"image\":\"LoadableImage_image__3XO0F\",\"imageLoaded\":\"LoadableImage_imageLoaded__3w-V6\"};","import React from 'react'\r\n\r\nexport const Header: React.FC = () => {\r\n    return <nav className=\"red darken-2\">\r\n                <div className=\"nav-wrapper\">\r\n                    <a href=\"https://andrey-golubenko.github.io/react-movies\" className=\"brand-logo\">Movies</a>\r\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                        <li><a href=\"https://github.com/Andrey-Golubenko/react-movies.git\">Repo</a></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n};","import React from 'react'\r\n\r\nexport const Footer: React.FC = () => {\r\n    return (\r\n        <footer className=\"page-footer red darken-1\">\r\n            <div className=\"footer-copyright red darken-1\">\r\n                <div className=\"container\">\r\n                    © {new Date().getFullYear()} Copyright Text\r\n                    <a className=\"grey-text text-lighten-4 right\" href=\"https://github.com/Andrey-Golubenko/react-movies.git\">Repo</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n};","import React from 'react'\r\n\r\nexport const Preloader: React.FC = () => {\r\n    return (\r\n        <div className=\"progress red accent-1\">\r\n            <div className=\"indeterminate red darken-3\" />\r\n        </div>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/image-placeholder.ee97e8e7.svg\";","import { MutableRefObject, useEffect, useState } from \"react\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from '../index'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\n// Custom-Hook\r\nexport function useOnScreen<T extends Element>(ref: MutableRefObject<T | null>, rootMargin: string = \"0px\"): boolean {\r\n    // State and setter for storing whether element is visible\r\n    const [isIntersecting, setIntersecting] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                // Update our state when observer callback fires\r\n                setIntersecting(entry.isIntersecting);\r\n            },\r\n            {\r\n                rootMargin,\r\n            }\r\n        );\r\n        if (ref.current) {\r\n            observer.observe(ref.current);\r\n        }\r\n        const currentRef = ref.current;\r\n        return () => {\r\n            observer.unobserve(currentRef as Element);\r\n        };\r\n        // eslint-disable-next-line\r\n    }, []); // Empty array ensures that effect is only run on mount and unmount\r\n    return isIntersecting;\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport styles from './LoadableImage.module.css'\r\nimport { useOnScreen } from  '../../store/hooks'\r\nimport { ILoadableImageProps } from '../../interfaces'\r\n\r\nexport const LoadableImage: React.FC<ILoadableImageProps> = (props) => {\r\n\r\n    const { src, alt = '', onLoad = () => {} } = props;\r\n    const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n    const imageRef = useRef<HTMLImageElement | null>(null);\r\n    const containerRef = useRef<HTMLDivElement | null>(null);\r\n    const isVisible = useOnScreen(containerRef);\r\n\r\n    useEffect(() => {\r\n        if (!isVisible || isLoaded) {\r\n            return;\r\n        }\r\n        if (imageRef.current) {\r\n            imageRef.current.onload = () => {\r\n                setIsLoaded(true);\r\n                onLoad();\r\n            };\r\n        }\r\n    }, [isVisible, onLoad, isLoaded]);\r\n\r\n    const wrapperClass = [styles.container];\r\n    if (isLoaded) {\r\n        wrapperClass.push(styles.containerLoaded)\r\n    }\r\n\r\n    const imgClass = [styles.image];\r\n    if (isLoaded) {\r\n        imgClass.push(styles.imageLoaded)\r\n    }\r\n\r\n    return (\r\n        <div ref={ containerRef } className={ wrapperClass.join(' ') }>\r\n            { (isVisible || isLoaded) && (<img\r\n                ref={ imageRef }\r\n                className={ imgClass.join(' ') }\r\n                src={ src }\r\n                alt={ alt }\r\n            />) }\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { IOneMovie } from '../interfaces'\r\nimport placeholder from '../media/image-placeholder.svg'\r\nimport {LoadableImage} from './LoadableImage/LoadableImage'\r\n\r\n\r\nexport const MovieItem: React.FC <IOneMovie>  = (props) => {\r\n    const {\r\n        Title: title,\r\n        Year: year,\r\n        imdbID: id,\r\n        Type: type,\r\n        Poster: poster\r\n    } = props;\r\n    // \"N/A\" - not available\r\n    return (<div id={ id } className=\"card\">\r\n        <div className=\"card-image waves-effect waves-block waves-light\">\r\n            <LoadableImage src={ poster === \"N/A\"\r\n                                 ? placeholder\r\n                                 : poster }\r\n            />\r\n        </div>\r\n        <div className=\"card-content\">\r\n            <span className=\"card-title activator grey-text text-darken-4\">{ title }</span>\r\n            <p>{ year }<span className=\"right\">{ type }</span></p>\r\n        </div>\r\n        <div className=\"card-action center\">\r\n            <Link\r\n                to={`/movie/${ id }`}\r\n                className=\"btn red darken-3\"\r\n            >Watch details</Link>\r\n        </div>\r\n    </div>)\r\n};","import React from 'react'\r\nimport { MovieItem } from './MovieItem'\r\nimport { IOneMovie } from '../interfaces'\r\nimport { useAppSelector } from '../store/hooks'\r\n\r\nexport const MovieList: React.FC = () => {\r\n\r\n    const movies = useAppSelector(state => state.moviesKEY.movieList);\r\n\r\n    return (<div className=\"all-movies\">\r\n        { movies?.length ? (movies.map((movie: IOneMovie ) => {\r\n                return <MovieItem key={movie.imdbID} {... movie}/>\r\n                }\r\n            ) ) : (<h2>Nothing found. Try again !</h2>)\r\n            }\r\n        </div> )\r\n};","export const FETCH_MOVIES = 'MOVIES/FETCH_MOVIES';\r\nexport const FETCH_SINGLE_MOVIE = 'MOVIES/FETCH_SINGLE_MOVIE';\r\nexport const GET_TOTAL_FOUND = 'MOVIES/GET_TOTAL_FOUND';\r\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\r\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\r\nexport const SHOW_ALERT = 'APP/SHOW_ALERT';\r\nexport const HIDE_ALERT = 'APP/HIDE_ALERT';\r\nexport const DEFINE_SEARCH_VALUE = 'SEARCH/DEFINE_SEARCH_VALUE';\r\nexport const SET_SEARCHED_TYPE = 'SEARCH/SET_SEARCHED_TYPE';\r\nexport const SET_SEARCHED_PAGE_ADD = 'SEARCH/SET_SEARCHED_PAGE_ADD';\r\nexport const SET_SEARCHED_PAGE_REMOVE = 'SEARCH/SET_SEARCHED_PAGE_REMOVE';\r\nexport const SET_SEARCHED_PAGE_START = 'SEARCH/SET_SEARCHED_PAGE_START';\r\n","import {\r\n    DEFINE_SEARCH_VALUE,\r\n    FETCH_MOVIES, FETCH_SINGLE_MOVIE,\r\n    GET_TOTAL_FOUND, HIDE_ALERT,\r\n    HIDE_LOADER, SET_SEARCHED_PAGE_ADD, SET_SEARCHED_PAGE_REMOVE, SET_SEARCHED_PAGE_START, SET_SEARCHED_TYPE,\r\n    SHOW_ALERT,\r\n    SHOW_LOADER\r\n} from './types'\r\nimport { Dispatch } from 'redux'\r\n\r\n\r\nexport function fetchSearchedMovies ( search: string ) {\r\n\r\n    const trueSearch = search.substring(1);\r\n\r\n    return async function (dispatch: Dispatch) {\r\n        try {\r\n            dispatch( hideAlert() );\r\n            dispatch( showLoader() );\r\n            const response = await fetch(`https://www.omdbapi.com/?apikey=f1e70387${ trueSearch ? trueSearch : '&s=matrix' }`);\r\n            const data = await response.json();\r\n            dispatch({ type: FETCH_MOVIES, payload: { fetchedMovies: data.Search } });\r\n            dispatch({ type: GET_TOTAL_FOUND, payload: { totalFound: data.totalResults } });\r\n            dispatch(hideLoader());\r\n            if (!response.ok) {\r\n                throw new Error()\r\n            }\r\n        }\r\n        catch {\r\n            dispatch( showAlert('Server Error! Please, try again later.') );\r\n            dispatch(hideLoader());\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchSingleMovie ( search: string ) {\r\n    return async function (dispatch: Dispatch) {\r\n        try {\r\n            dispatch( hideAlert() );\r\n            dispatch( showLoader() );\r\n            const response = await fetch(`https://www.omdbapi.com/?apikey=f1e70387${ search }`);\r\n            const data = await response.json();\r\n            dispatch({ type: FETCH_SINGLE_MOVIE, payload: { fetchedSingleMovie: data } });\r\n            dispatch(hideLoader());\r\n            if (!response.ok) {\r\n                throw new Error()\r\n            }\r\n        }\r\n        catch {\r\n            dispatch( showAlert('Server Error! Please, try again later.') );\r\n            dispatch(hideLoader());\r\n        }\r\n    }\r\n}\r\n\r\nfunction showLoader() {\r\n    return {\r\n        type: SHOW_LOADER\r\n    }\r\n}\r\n\r\nfunction hideLoader() {\r\n    return {\r\n        type: HIDE_LOADER\r\n    }\r\n}\r\n\r\nexport function showAlert (text: string) {\r\n    return {\r\n        type: SHOW_ALERT,\r\n        payload: { text: text }\r\n    }\r\n}\r\n\r\nexport function hideAlert () {\r\n    return {\r\n        type: HIDE_ALERT,\r\n    }\r\n}\r\n\r\nexport function defineSearchVal (text: string) {\r\n    return {\r\n        type: DEFINE_SEARCH_VALUE,\r\n        payload: {\r\n            text: text\r\n        }\r\n    }\r\n}\r\n\r\nexport function setSearchedType (searchedType: string | null ) {\r\n    return {\r\n        type: SET_SEARCHED_TYPE,\r\n        payload: {\r\n            searchedType: searchedType\r\n        }\r\n    }\r\n}\r\n\r\nexport function setSearchedPageAdd () {\r\n    return {\r\n        type: SET_SEARCHED_PAGE_ADD,\r\n    }\r\n}\r\n\r\nexport function setSearchedPageRemove () {\r\n    return {\r\n        type: SET_SEARCHED_PAGE_REMOVE,\r\n    }\r\n}\r\n\r\nexport function setSearchedPageStart () {\r\n    return {\r\n        type: SET_SEARCHED_PAGE_START,\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { useAppDispatch } from '../store/hooks'\r\nimport { setSearchedPageStart, setSearchedType } from '../store/actionCreatores'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\n\r\n\r\nexport const RadioBtnList: React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const { push } = useHistory();\r\n    const { pathname, search } = useLocation();\r\n\r\n    const getRadioPureParams = () => {\r\n        let pureSearchParam = null;\r\n        let pureTypeParam = 'all';\r\n\r\n        if(search) {\r\n            pureSearchParam = search.split('&')[1];\r\n            pureSearchParam = '&' + pureSearchParam;\r\n            pureTypeParam = search.split('&')[2].split('=')[1];\r\n            pureTypeParam = pureTypeParam !== 'null' ? pureTypeParam : 'all';\r\n\r\n        }\r\n        return {\r\n            pureSearchParam,\r\n            pureTypeParam,\r\n        }\r\n    };\r\n\r\n    const handleChangeRadio = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const typeParam = e.target.dataset.type;\r\n\r\n        push({\r\n           pathname,\r\n           search: `${search ? getRadioPureParams().pureSearchParam : '&s=matrix'}&type=${ typeParam !== 'all' ? typeParam : null }`\r\n        });\r\n\r\n        const checkedTypeParam = typeParam ? typeParam : 'all';\r\n\r\n        dispatch( setSearchedType( checkedTypeParam ) );\r\n        dispatch( setSearchedPageStart() );\r\n    };\r\n\r\n\r\n    return (<div className=\"check-list\">\r\n                <p className='search-radio-movies'>\r\n                    <label>\r\n                        <input\r\n                            name='group-choice'\r\n                            type='radio'\r\n                            data-type='all'\r\n                            checked={getRadioPureParams().pureTypeParam === 'all'}\r\n                            onChange={ handleChangeRadio }\r\n                        />\r\n                        <span>All</span>\r\n                    </label>\r\n                </p>\r\n                <p className=\"search-radio-movies\">\r\n                    <label>\r\n                        <input\r\n                            name='group-choice'\r\n                            type=\"radio\"\r\n                            data-type='movie'\r\n                            checked={getRadioPureParams().pureTypeParam === 'movie'}\r\n                            onChange={handleChangeRadio}\r\n                        />\r\n                        <span>Movies</span>\r\n                    </label>\r\n                </p>\r\n                <p className=\"search-radio-movies\">\r\n                    <label>\r\n                        <input\r\n                            name='group-choice'\r\n                            type=\"radio\"\r\n                            data-type='series'\r\n                            checked={getRadioPureParams().pureTypeParam === 'series'}\r\n                            onChange={handleChangeRadio}\r\n                        />\r\n                        <span>Series</span>\r\n                    </label>\r\n                </p>\r\n            </div>\r\n    )\r\n};","import React from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks'\r\nimport { setSearchedPageAdd, setSearchedPageRemove } from '../store/actionCreatores'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\n\r\nexport const Pagination: React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const totalFound = useAppSelector(state => state.moviesKEY.totalFound);\r\n    const { search, pathname } = useLocation();\r\n    const { push } = useHistory();\r\n\r\n    const getPugPureParams = () => {\r\n        let pureSearchParam = null;\r\n        let pureTypeParam = 'all';\r\n        let purePageParam = 1;\r\n        if(search) {\r\n            pureSearchParam = search.split('&')[1];\r\n            pureSearchParam = '&' + pureSearchParam;\r\n            pureTypeParam = search.split('&')[2].split('=')[1];\r\n            if(search.split('&')[3]) {\r\n                purePageParam = +search.split('&')[3].split('=')[1] || 1;\r\n            } else {\r\n                purePageParam = 1\r\n            }\r\n        }\r\n        return {\r\n            pureSearchParam,\r\n            pureTypeParam,\r\n            purePageParam\r\n        }\r\n    };\r\n\r\n    const handlePrevPage = () => {\r\n        const pureParams = getPugPureParams();\r\n        if ( pureParams.purePageParam > 1 ) {\r\n            push({\r\n                pathname,\r\n                search: `${search ? pureParams.pureSearchParam : '&s=matrix'}&type=${ pureParams.pureTypeParam !== 'all' ? pureParams.pureTypeParam : null}&page=${ pureParams.purePageParam - 1 }`\r\n            });\r\n            dispatch( setSearchedPageRemove() )\r\n        }\r\n    };\r\n\r\n    const handleNextPage = () => {\r\n        const pureParams = getPugPureParams();\r\n        if ( pureParams.purePageParam < ( Math.ceil(totalFound / 10) ) ) {\r\n            push({\r\n               pathname,\r\n               search: `${search ? pureParams.pureSearchParam : '&s=matrix'}&type=${ pureParams.pureTypeParam !== 'all' ? pureParams.pureTypeParam : null}&page=${ pureParams.purePageParam + 1 }`\r\n            });\r\n            dispatch( setSearchedPageAdd() )\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"next-btn-wrapper\">\r\n            <button\r\n                className=\"btn prev-btn red darken-2\"\r\n                onClick={ handlePrevPage }><span>&#60;</span>Prev Page</button>\r\n            <h5 className=\"current-page\">Current page : { totalFound ? getPugPureParams().purePageParam : 1 }</h5>\r\n            <button\r\n                className=\"btn next-btn red darken-2\"\r\n                onClick={ handleNextPage }>Next Page<span>&#62;</span></button>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport { useAppSelector } from '../store/hooks'\r\n\r\n\r\nexport const Alert: React.FC = () => {\r\n    const message = useAppSelector(state => state.appKEY.alert);\r\n\r\n    return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n            { message }\r\n        </div>\r\n    )\r\n};","import React, { useRef } from 'react'\r\nimport { RadioBtnList } from './RadioBtnList'\r\nimport { Pagination } from './Pagination'\r\nimport { ICustomEvent } from '../interfaces'\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks'\r\nimport { Alert } from './Alert'\r\nimport { defineSearchVal, setSearchedPageStart, setSearchedType } from '../store/actionCreatores'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nexport const Search: React.FC = () => {\r\n\r\n    const inputRef = useRef<HTMLInputElement> (null);\r\n    const dispatch = useAppDispatch();\r\n    const totalFound = useAppSelector(state => state.moviesKEY.totalFound);\r\n    const message = useAppSelector(state => state.appKEY.alert);\r\n    const searchVal = useAppSelector(state => state.searchKEY.searchVal);\r\n    const { pathname, search } = useLocation();\r\n    const { push } = useHistory();\r\n\r\n\r\n    const getSearchPureParams = () => {\r\n        let pureSearchParam = '';\r\n        let pureTypeParam = 'all';\r\n        if(search){\r\n            pureSearchParam = search.split('&')[1].split('=')[1];\r\n            pureTypeParam = search.split('&')[2].split('=')[1];\r\n            pureTypeParam = pureTypeParam !== 'null' ? pureTypeParam : 'all';\r\n        }\r\n        return {\r\n            pureSearchParam,\r\n            pureTypeParam\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleInput = () => {\r\n        dispatch( defineSearchVal( inputRef.current!.value ) );\r\n    };\r\n\r\n    const setHandledInput = (event: React.KeyboardEvent | ICustomEvent) => {\r\n        if (event.key  === 'Enter' || event.currentTarget.className === 'btn search-btn red darken-1') {\r\n            push({\r\n                pathname,\r\n                search: `&s=${ searchVal }&type=${ getSearchPureParams().pureTypeParam !== 'all' ? getSearchPureParams().pureTypeParam : null}`\r\n            });\r\n\r\n            dispatch( setSearchedPageStart() );\r\n            dispatch( defineSearchVal( '' ) );\r\n            dispatch( setSearchedType( getSearchPureParams().pureTypeParam ) );\r\n        }\r\n    };\r\n\r\n        return (<div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"input-field search-field\">\r\n                            <input\r\n                                ref={ inputRef }\r\n                                className=\"validate\"\r\n                                placeholder=\"Search\"\r\n                                type=\"search\"\r\n                                value={ searchVal }\r\n                                onChange={ handleInput }\r\n                                onKeyPress={ setHandledInput }\r\n                            />\r\n                            <button\r\n                                className=\"btn search-btn red darken-1\"\r\n                                onClick={ setHandledInput }\r\n                            >Search</button>\r\n                        </div>\r\n\r\n                        { message && <Alert /> }\r\n\r\n                        <RadioBtnList />\r\n                        <h5 className='total-found'>\r\n                            {\r\n                                getSearchPureParams().pureSearchParam && totalFound\r\n                                    ? `On request : '${getSearchPureParams().pureSearchParam}', type : '${getSearchPureParams().pureTypeParam}'  -  total found : ${totalFound} results`\r\n                                    : `Total ${totalFound\r\n                                    ? totalFound\r\n                                    :'not found'} movies and series`\r\n                            }\r\n                            { totalFound ? ' on ' + Math.ceil(totalFound / 10) + ' pages' : ''\r\n                            }\r\n                        </h5>\r\n                        <Pagination />\r\n                    </div>\r\n                </div>)\r\n};","import React, { useEffect } from 'react'\r\nimport { Preloader } from '../components/Preloader'\r\nimport { MovieList } from '../components/MovieList'\r\nimport { Search } from '../components/Search'\r\nimport { useAppSelector, useAppDispatch } from '../store/hooks'\r\nimport { fetchSearchedMovies } from '../store/actionCreatores'\r\nimport { Pagination } from '../components/Pagination'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n\r\nexport const Home: React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const loading = useAppSelector(state => state.appKEY.loadingStatus);\r\n    const { search } = useLocation();\r\n\r\n    useEffect(() => {\r\n        dispatch( fetchSearchedMovies( search ) )\r\n    },[dispatch, search]);\r\n\r\n    return (\r\n        <>\r\n            <Search />\r\n            {\r\n                loading ? <Preloader /> : <MovieList />\r\n            }\r\n            <Pagination />\r\n        </>\r\n    )\r\n};","import React, { useEffect } from 'react'\r\nimport { useAppSelector, useAppDispatch } from '../store/hooks'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { fetchSingleMovie } from \"../store/actionCreatores\";\r\nimport { Preloader } from '../components/Preloader'\r\nimport { LoadableImage } from '../components/LoadableImage/LoadableImage'\r\n\r\n\r\nexport const SingleMovie: React.FC = () => {\r\n\r\n    const { id } = useParams<{ id: string }>();\r\n    const dispatch = useAppDispatch();\r\n    const loading = useAppSelector(state => state.appKEY.loadingStatus);\r\n    const singleMovie = useAppSelector(state => state.moviesKEY.singleMovie);\r\n    const { goBack } = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch( fetchSingleMovie(`&i=${id}&plot=full`) )\r\n    }, [dispatch, id]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ? <Preloader />\r\n                : ( <div className=\"single-movie center\">\r\n                        <div className=\"single-movie__content\">\r\n                            <div className=\"content__image\">\r\n                                <LoadableImage src={ singleMovie.Poster! } />\r\n                            </div>\r\n                            <div className=\"content__description\">\r\n                                <h4>{ singleMovie.Title }</h4>\r\n                                <h5 className=\"description__data\">Year : { singleMovie.Year }</h5>\r\n                                <h5 className=\"description__data\">Country : { singleMovie.Country }</h5>\r\n                                <h5 className=\"description__data\">Runtime : { singleMovie.Runtime }</h5>\r\n                                <h5 className=\"description__data\">Genre : { singleMovie.Genre }</h5>\r\n                                <h5 className=\"description__data\">Language : { singleMovie.Language }</h5>\r\n                                <h5 className=\"description__data\">Director : { singleMovie.Director }</h5>\r\n                                <h5 className=\"description__data\">Actors : { singleMovie.Actors }</h5>\r\n                                <p className=\"description__plot\">\r\n                                    <span className=\"description__data\">Plot : </span>{ singleMovie.Plot }\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"btn\"\r\n                            onClick={ goBack }\r\n                        >Go Back</button>\r\n                     </div>\r\n                   )\r\n            }\r\n        </>\r\n    )\r\n};\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Header } from './layout/Header'\nimport { Footer } from './layout/Foter'\nimport { Home } from './pages/Home'\nimport { SingleMovie } from './pages/SingleMovie'\n\nconst App: React.FC = () => {\n  return (\n      <Router basename=\"/react-movie\">\n          <Header />\n              <main className=\"container content\">\n                  <Switch>\n                      <Route exact path='/' component={ Home } />\n                      <Route path={'/movie/:id'} component={ SingleMovie } />\n                  </Switch>\n              </main>\n          <Footer />\n      </Router>\n  );\n};\n\nexport default App;","import { FETCH_MOVIES, FETCH_SINGLE_MOVIE, GET_TOTAL_FOUND } from './types'\r\nimport { IMoviesListState, IMoviesAction } from '../interfaces'\r\n\r\nconst initialState: IMoviesListState = {\r\n    movieList   : [],\r\n    totalFound  : 0,\r\n    singleMovie : {}\r\n};\r\n\r\nexport function moviesReducer (state = initialState, action: IMoviesAction): IMoviesListState {\r\n    switch (action.type) {\r\n        case FETCH_MOVIES : return { ...state, movieList: action.payload.fetchedMovies! };\r\n        case GET_TOTAL_FOUND : return { ...state, totalFound: Number(action.payload.totalFound) };\r\n        case FETCH_SINGLE_MOVIE : return { ...state, singleMovie: action.payload.fetchedSingleMovie! };\r\n\r\n        default : return state\r\n    }\r\n}","import { HIDE_ALERT, HIDE_LOADER, SHOW_ALERT, SHOW_LOADER } from './types'\r\nimport { IAppState, IAppAction } from '../interfaces'\r\n\r\nconst InitialState: IAppState = {\r\n    loadingStatus: false,\r\n    alert: null\r\n};\r\n\r\nexport function appReducer (state = InitialState, action: IAppAction): IAppState {\r\n    switch (action.type) {\r\n        case SHOW_LOADER : return { ...state, loadingStatus: true };\r\n        case HIDE_LOADER : return { ...state, loadingStatus: false };\r\n        case SHOW_ALERT  : return { ...state, alert: action.payload.text };\r\n        case HIDE_ALERT  : return { ...state, alert: null };\r\n\r\n        default : return state\r\n    }\r\n}","import { ISearchAction, ISearchState } from '../interfaces'\r\nimport {\r\n    DEFINE_SEARCH_VALUE,\r\n    SET_SEARCHED_PAGE_ADD, SET_SEARCHED_PAGE_REMOVE, SET_SEARCHED_PAGE_START,\r\n    SET_SEARCHED_TYPE,\r\n} from './types'\r\n\r\nconst initialSearchState: ISearchState = {\r\n    searchVal    : '',\r\n    // searchedVal  : '',\r\n    searchedType : 'all',\r\n    currentPage  : 1\r\n};\r\n\r\nexport function searchReducer (state = initialSearchState, action: ISearchAction ): ISearchState {\r\n    switch(action.type) {\r\n        case DEFINE_SEARCH_VALUE : return { ...state, searchVal: action.payload.text! };\r\n        case SET_SEARCHED_TYPE : return { ...state, searchedType: action.payload.searchedType! };\r\n        case SET_SEARCHED_PAGE_ADD : return { ...state, currentPage: state.currentPage + 1 };\r\n        case SET_SEARCHED_PAGE_REMOVE : return { ...state, currentPage: state.currentPage - 1 };\r\n        case SET_SEARCHED_PAGE_START : return { ...state, currentPage: 1 };\r\n\r\n        default : return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { moviesReducer } from './moviesReducer'\r\nimport { appReducer } from './appReducer'\r\nimport { searchReducer } from './searchReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    moviesKEY : moviesReducer,\r\n    appKEY    : appReducer,\r\n    searchKEY : searchReducer\r\n});\r\n","import './index.css';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, AnyAction } from 'redux'\nimport { Provider } from 'react-redux'\nimport { rootReducer } from './store/rootReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk, { ThunkDispatch } from 'redux-thunk'\nimport { IMoviesAction } from './interfaces'\n\nconst store = createStore( rootReducer,\n    composeWithDevTools( applyMiddleware<DispatchFunctionType, IMoviesAction>(thunk) )\n);\n\ntype DispatchFunctionType = ThunkDispatch<IMoviesAction, undefined, AnyAction>\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={ store }>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\n\n"],"sourceRoot":""}